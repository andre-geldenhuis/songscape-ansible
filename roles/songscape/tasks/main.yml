---
-
  - name: Update package cache
    apt:
      update_cache: yes
  - name: Install prerequisites
    apt: name={{item}} state=installed
    with_items:
      - git
      - python-pip
      - postgresql
      - postgresql-contrib
      - python-psycopg2
      - libpq-dev
      - python-numpy
      - python-matplotlib
      - python-pygame #apparently needed for wavy package
      - python-pil # should install the PILLOW fork
      - mercurial #needed to clone bitbucket repository for wavy module

  # - name: Install python dependencies from pip
  #   pip: name=django version=1.9
  #
  # - name: Install python dependencies from pip
  #   pip: name={{item}}
  #   with_items:
  #     - south
  #     - django_nose

  - name: Clone repository
    git:
      repo: "{{ songscape_repo }}"  #vars for this role defined in roles/songscape/vars/main.yml
      dest: "{{ songscape_install_dir }}"
      version: vuw

  # template the local_settings.py file - it is copied from roles/songscape/templates/local_settings.py.j2
  # The secret key is set via ansibles loopup('password') method.
  # Changing the secret key from what is on github is really important
  # This will create a file with the secret key called secret_key in the
  # root of the ansible playbook if it doesn't already exist and use that.
  # Note! if the file exists it will just use it's contents - even if empty!
  - name: Set local_settings.py secret_key and deploy to server
    template:
      src: local_settings.py.j2
      dest: "{{ songscape_install_dir }}/local_settings.py"

  - name: remove wavy dependency from requirements.txt (it will be installed later) it seems to cause problems with some versions of pip
    lineinfile:
      dest: "{{ songscape_install_dir }}/requirements.txt"
      line: "git+https://github.com/dragonfly-science/numpy-wavy.git"
      state: absent

  - name: Install python dependencies from pip
    pip:
      requirements: "{{songscape_install_dir}}/requirements.txt"

  - name: Clone wavy from dragonfly git
    git:
      repo: "{{ wavy_repo }}"
      dest: "{{ wavy_install_dir }}"

  - name: run wavy installer
    shell: python setup.py install
    args:
      chdir: "{{wavy_install_dir}}"
      creates: /usr/local/lib/python2.7/dist-packages/Wavy-1.0.egg-info

  - name: Create database
    postgresql_db: name={{db_name}}
    become: True
    become_user: postgres

  - name: Setup postgres database user
    postgresql_user:
      name: "{{item}}"
      db: "{{db_name}}"
      password: "{{ db_password }}"
      role_attr_flags: CREATEDB,NOSUPERUSER
    become: True
    become_user: postgres
    with_items:
      - songscape

  - name: Run django database makemigrations in case of db changes - TODO this might be unwise to run all the time
    shell: python manage.py {{item}}
    args:
      chdir: /opt/songscape
    with_items:
      - makemigrations
      - migrate
      - migrate --run-syncdb
      - initial
      - load_vuw_recordings
      - extract_snippets_vuw
      # - create superuser
      
    become: True
    become_user: songscape

  - name: Create Directory intermediate data
    file:
      path: "{{ intermediate_data_dir }}"
      state: directory
      mode: 0755

  - name: Create snippets_data_dir
    file:
      path: "{{ snippets_data_dir }}"
      state: directory
      mode: 0755
